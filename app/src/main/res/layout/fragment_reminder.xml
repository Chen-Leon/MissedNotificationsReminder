<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <import type="android.view.View" />

        <variable
            name="parentModel"
            type="com.app.missednotificationsreminder.settings.SettingsViewModel" />

        <variable
            name="viewModel"
            type="com.app.missednotificationsreminder.settings.reminder.ReminderViewModel" />

        <variable
            name="viewState"
            type="androidx.lifecycle.LiveData&lt;com.app.missednotificationsreminder.settings.reminder.ReminderViewState&gt;" />
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <TextView
            style="@style/Label"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@{viewState.reminderEnabled ? @string/reminder_enabled : @string/reminder_disabled}"
            tools:text="@string/reminder_enabled" />

        <androidx.appcompat.widget.SwitchCompat
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="@{viewState.reminderEnabled}"
            android:onCheckedChanged="@{(v, checked) -> viewModel.reminderEnabledChanged(checked)}"
            android:textOff="@string/reminder_disabled"
            android:textOn="@string/reminder_enabled" />

        <com.google.android.material.textfield.TextInputLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:error="@{viewState.intervalError}">

            <EditText
                android:id="@+id/intervalName"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:afterTextChanged="@{s -> viewModel.intervalMinutesChanged(s.toString())}"
                android:enabled="@{viewState.reminderEnabled}"
                android:hint="@string/reminder_interval_hint"
                android:inputType="numberDecimal"
                android:text="@{viewState.intervalMinutesString}" />
        </com.google.android.material.textfield.TextInputLayout>

        <com.google.android.material.slider.Slider
            android:id="@+id/intervalSeekBar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:enabled="@{viewState.reminderEnabled}"
            android:stepSize="1"
            android:value="@{viewState.seekInterval}"
            android:valueFrom="0"
            android:valueTo="@{viewState.maxIntervalSeekBarValue}"
            app:labelBehavior="gone"
            app:onProgressChanged="@{viewModel::seekIntervalChanged}" />

        <TextView
            style="@style/Label"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@{viewState.limitReminderRepeats ? @string/limit_reminder_repeats_enabled : @string/limit_reminder_repeats_disabled}"
            tools:text="@string/limit_reminder_repeats_enabled" />

        <androidx.appcompat.widget.SwitchCompat
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="@{viewState.limitReminderRepeats}"
            android:enabled="@{viewState.reminderEnabled}"
            android:onCheckedChanged="@{(v, checked) -> viewModel.limitReminderRepeatsChanged(checked)}"
            android:textOff="@string/limit_reminder_repeats_disabled"
            android:textOn="@string/limit_reminder_repeats_enabled" />

        <com.google.android.material.textfield.TextInputLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <EditText
                android:id="@+id/repeatsName"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:afterTextChanged="@{s -> viewModel.repeatsChanged(s.toString())}"
                android:enabled="@{viewState.reminderEnabled &amp;&amp; viewState.limitReminderRepeats}"
                android:hint="@string/reminder_repeats_hint"
                android:inputType="number"
                android:text="@{viewState.repeatsString}" />
        </com.google.android.material.textfield.TextInputLayout>

        <com.google.android.material.slider.Slider
            android:id="@+id/repeatsSeekBar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:enabled="@{viewState.reminderEnabled &amp;&amp; viewState.limitReminderRepeats}"
            android:stepSize="1"
            android:value="@{viewState.seekRepeats}"
            android:valueFrom="0"
            android:valueTo="@{viewState.maxRepeats - viewState.minRepeats}"
            app:labelBehavior="gone"
            app:onProgressChanged="@{viewModel::seekRepeatsChanged}" />

        <TextView
            style="@style/Label"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@{viewState.createDismissNotification ? @string/create_dismiss_notification_enabled : @string/create_dismiss_notification_disabled }"
            android:visibility="@{parentModel.advancedSettingsVisible}"
            tools:text="@string/create_dismiss_notification_enabled" />

        <androidx.appcompat.widget.SwitchCompat
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="@{viewState.createDismissNotification}"
            android:enabled="@{viewState.reminderEnabled}"
            android:onCheckedChanged="@{(v, checked) -> viewModel.createDismissNotificationChanged(checked)}"
            android:textOff="@string/create_dismiss_notification_disabled"
            android:textOn="@string/create_dismiss_notification_enabled"
            android:visibility="@{parentModel.advancedSettingsVisible}" />

        <TextView
            style="@style/Label"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@{viewState.createDismissNotificationImmediately ? @string/create_dismiss_notification_immediately_enabled : @string/create_dismiss_notification_immediately_disabled }"
            android:visibility="@{parentModel.advancedSettingsVisible}"
            tools:text="@string/create_dismiss_notification_immediately_enabled" />

        <androidx.appcompat.widget.SwitchCompat
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="@{viewState.createDismissNotificationImmediately}"
            android:enabled="@{viewState.reminderEnabled &amp;&amp; viewState.createDismissNotification}"
            android:onCheckedChanged="@{(v, checked) -> viewModel.createDismissNotificationImmediatelyChanged(checked)}"
            android:textOff="@string/create_dismiss_notification_disabled"
            android:textOn="@string/create_dismiss_notification_enabled"
            android:visibility="@{parentModel.advancedSettingsVisible}" />

        <TextView
            style="@style/Label"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@{viewState.forceWakeLock ? @string/wakelock_enabled : @string/wakelock_disabled}"
            android:visibility="@{parentModel.advancedSettingsVisible.get() || viewState.forceWakeLock ? View.VISIBLE : View.GONE}"
            tools:text="@string/wakelock_enabled" />

        <androidx.appcompat.widget.SwitchCompat
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="@{viewState.forceWakeLock}"
            android:enabled="@{viewState.intervalSeconds &lt; viewState.maxIntervalForWakeLock}"
            android:onCheckedChanged="@{(v, checked) -> viewModel.forceWakeLockChanged(checked)}"
            android:textOff="@string/wakelock_disabled"
            android:textOn="@string/wakelock_enabled"
            android:visibility="@{parentModel.advancedSettingsVisible.get() || viewState.forceWakeLock ? View.VISIBLE : View.GONE}" />

    </LinearLayout>
</layout>
